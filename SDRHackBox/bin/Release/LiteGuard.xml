<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiteGuard</name>
    </assembly>
    <members>
        <member name="T:LiteGuard.Guard">
            <summary>
            Provides guard clauses.
            </summary>
        </member>
        <member name="M:LiteGuard.Guard.AgainstNullArgument``1(System.String,``0)">
            <summary>
            Guards against a null argument.
            </summary>
            <typeparam name="TArgument">The type of the argument.</typeparam>
            <param name="parameterName">Name of the parameter.</param>
            <param name="argument">The argument.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="argument" /> is <c>null</c>.</exception>
            <remarks>
            <typeparamref name="TArgument"/> is restricted to reference types to avoid boxing of value type objects.
            </remarks>
        </member>
        <member name="M:LiteGuard.Guard.AgainstNullArgumentIfNullable``1(System.String,``0)">
            <summary>
            Guards against a null argument if <typeparamref name="TArgument" /> can be <c>null</c>.
            </summary>
            <typeparam name="TArgument">The type of the argument.</typeparam>
            <param name="parameterName">Name of the parameter.</param>
            <param name="argument">The argument.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="argument" /> is <c>null</c>.</exception>
            <remarks>
            Performs a type check to avoid boxing of value type objects.
            </remarks>
        </member>
        <member name="M:LiteGuard.Guard.AgainstNullArgumentProperty``1(System.String,System.String,``0)">
            <summary>
            Guards against a null argument property value.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="parameterName">Name of the parameter.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="argumentProperty">The argument property.</param>
            <exception cref="T:System.ArgumentException"><paramref name="argumentProperty" /> is <c>null</c>.</exception>
            <remarks>
            <typeparamref name="TProperty"/> is restricted to reference types to avoid boxing of value type objects.
            </remarks>
        </member>
        <member name="M:LiteGuard.Guard.AgainstNullArgumentPropertyIfNullable``1(System.String,System.String,``0)">
            <summary>
            Guards against a null argument property value if <typeparamref name="TProperty"/> can be <c>null</c>.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="parameterName">Name of the parameter.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="argumentProperty">The argument property.</param>
            <exception cref="T:System.ArgumentException"><paramref name="argumentProperty" /> is <c>null</c>.</exception>
            <remarks>
            Performs a type check to avoid boxing of value type objects.
            </remarks>
        </member>
        <member name="M:LiteGuard.Guard.IsNullableType(System.Type)">
            <summary>
            Determines whether the specified type is a nullable type.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if the specified type is a nullable type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:LiteGuard.Guard.ValidatedNotNullAttribute">
            <summary>
            When applied to a parameter,
            this attribute provides an indication to code analysis that the argument has been null checked.
            </summary>
        </member>
    </members>
</doc>
